{"ast":null,"code":"var _jsxFileName = \"/Users/rfk/Desktop/skelly-treasure/packages/react-app/src/App.js\";\nimport React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport GameScreen from './components/GameScreen';\nimport \"./App.css\";\nconst GET_TRANSFERS = gql`\n  {\n    transfers(first: 10) {\n      id\n      from\n      to\n      value\n    }\n  }\n`;\n\nasync function readOnchainBalance() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = ethers.getDefaultProvider(); // Create an instance of ethers.Contract\n  // Read more about ethers.js on https://docs.ethers.io/ethers.js/html/api-contract.html\n\n  const ceaErc20 = new ethers.Contract(addresses.ceaErc20, abis.erc20, defaultProvider); // A pre-defined address that owns some CEAERC20 tokens\n\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({\n    tokenBalance: tokenBalance.toString()\n  });\n}\n\nfunction App() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TRANSFERS);\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({\n        transfers: data.transfers\n      });\n    }\n  }, [loading, error, data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GameScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rfk/Desktop/skelly-treasure/packages/react-app/src/App.js"],"names":["React","logo","addresses","abis","gql","ethers","useQuery","GameScreen","GET_TRANSFERS","readOnchainBalance","defaultProvider","getDefaultProvider","ceaErc20","Contract","erc20","tokenBalance","balanceOf","console","log","toString","App","loading","error","data","useEffect","transfers"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAGJ,GAAI;;;;;;;;;CAA1B;;AAWA,eAAeK,kBAAf,GAAoC;AAClC;AACA,QAAMC,eAAe,GAAGL,MAAM,CAACM,kBAAP,EAAxB,CAFkC,CAGlC;AACA;;AACA,QAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,QAAX,CAAoBX,SAAS,CAACU,QAA9B,EAAwCT,IAAI,CAACW,KAA7C,EAAoDJ,eAApD,CAAjB,CALkC,CAMlC;;AACA,QAAMK,YAAY,GAAG,MAAMH,QAAQ,CAACI,SAAT,CAAmB,4CAAnB,CAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA,YAAY,EAAEA,YAAY,CAACI,QAAb;AAAhB,GAAZ;AACD;;AAED,SAASC,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,QAAQ,CAACE,aAAD,CAAzC;AAEAR,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAAtB,IAA8BA,IAAI,CAACE,SAAvC,EAAkD;AAChDR,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEO,QAAAA,SAAS,EAAEF,IAAI,CAACE;AAAlB,OAAZ;AACD;AACF,GAJD,EAIG,CAACJ,OAAD,EAAUC,KAAV,EAAiBC,IAAjB,CAJH;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeH,GAAf","sourcesContent":["import React from \"react\";\nimport logo from \"./ethereumLogo.png\";\nimport { addresses, abis } from \"@project/contracts\";\nimport { gql } from \"apollo-boost\";\nimport { ethers } from \"ethers\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport GameScreen from './components/GameScreen';\nimport \"./App.css\";\n\nconst GET_TRANSFERS = gql`\n  {\n    transfers(first: 10) {\n      id\n      from\n      to\n      value\n    }\n  }\n`;\n\nasync function readOnchainBalance() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = ethers.getDefaultProvider();\n  // Create an instance of ethers.Contract\n  // Read more about ethers.js on https://docs.ethers.io/ethers.js/html/api-contract.html\n  const ceaErc20 = new ethers.Contract(addresses.ceaErc20, abis.erc20, defaultProvider);\n  // A pre-defined address that owns some CEAERC20 tokens\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({ tokenBalance: tokenBalance.toString() });\n}\n\nfunction App() {\n  const { loading, error, data } = useQuery(GET_TRANSFERS);\n\n  React.useEffect(() => {\n    if (!loading && !error && data && data.transfers) {\n      console.log({ transfers: data.transfers });\n    }\n  }, [loading, error, data]);\n\n  return (\n    <div className=\"App\">\n      <GameScreen />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}